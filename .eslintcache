[{"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/index.js":"1","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/LoginForm.js":"2","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/Register.js":"3","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/MoreDetail.js":"4","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/ChoosePicture.js":"5","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/CaptureParticipapnt.js":"6","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/AllowsPictures.js":"7","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/firebase/config.js":"8","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/AddEvent.js":"9","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/ListofParticipant.js":"10","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/firebase/index.js":"11","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/serviceWorker.js":"12","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/UploadParticipant.js":"13","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/Process.js":"14","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/App.js":"15","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/EditEvent.js":"16","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/ViewPicture.js":"17","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/Nevbar.js":"18","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/UploadFunction.js":"19"},{"size":499,"mtime":1601212011969,"results":"20","hashOfConfig":"21"},{"size":7416,"mtime":1606138396347,"results":"22","hashOfConfig":"21"},{"size":6294,"mtime":1606138512060,"results":"23","hashOfConfig":"21"},{"size":5119,"mtime":1606135831820,"results":"24","hashOfConfig":"21"},{"size":8916,"mtime":1606136814048,"results":"25","hashOfConfig":"21"},{"size":2108,"mtime":1606136639325,"results":"26","hashOfConfig":"21"},{"size":8933,"mtime":1606138299192,"results":"27","hashOfConfig":"21"},{"size":439,"mtime":1600771073486,"results":"28","hashOfConfig":"21"},{"size":8959,"mtime":1606137966027,"results":"29","hashOfConfig":"21"},{"size":4431,"mtime":1606138081848,"results":"30","hashOfConfig":"21"},{"size":217,"mtime":1606140685953,"results":"31","hashOfConfig":"21"},{"size":5085,"mtime":1600771073514,"results":"32","hashOfConfig":"21"},{"size":5620,"mtime":1606138061719,"results":"33","hashOfConfig":"21"},{"size":6700,"mtime":1606141193543,"results":"34","hashOfConfig":"21"},{"size":1951,"mtime":1606136500929,"results":"35","hashOfConfig":"21"},{"size":9909,"mtime":1606137919672,"results":"36","hashOfConfig":"21"},{"size":5027,"mtime":1606137235627,"results":"37","hashOfConfig":"21"},{"size":3991,"mtime":1606138341390,"results":"38","hashOfConfig":"21"},{"size":8651,"mtime":1606144899074,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ll3gz0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/index.js",[],["85","86"],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/LoginForm.js",["87","88","89"],"import firebase from './firebase'\nimport React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Form, Button, Container, Row, Col, Card } from 'react-bootstrap'\nimport './Style.css'\nimport logo from \"./Component-logo.svg\"\nimport vectorCom from \"./Component-vec.svg\"\nimport graCom from \"./Component-gra.svg\"\n\nclass LoginForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            currentUser: null,\n            showAlert: false,\n            validate: false,\n            auth: false,\n            show: false\n        }\n    }\n\n    onChange = e => {\n        const { name, value } = e.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    onSubmit = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { email, password } = this.state\n        if (form.checkValidity() === true) {\n            firebase.auth()\n                .signInWithEmailAndPassword(email, password)\n                .then(response => {\n                    this.setState({\n                        currentUser: response.user\n                    })\n                    this.props.history.push('/')\n                })\n                .catch(error => {\n                    this.setState({\n                        showAlert: true\n                    })\n                })\n        }\n        this.setState({\n            validate: true\n        })\n        e.stopPropagation();\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    currentUser: user\n                })\n            }\n            this.setState({\n                auth: true\n            })\n        })\n    }\n\n    handleShow = () => {\n        this.setState({\n            show: true\n        })\n    }\n\n    handleClose = () => {\n        this.setState({\n            show: false\n        })\n    }\n\n    render() {\n        const { showAlert, currentUser, validate, auth } = this.state\n        if (auth) {\n            if (!currentUser) {\n                return (\n\n                    <Container fluid>\n                        <Row>\n                            <Col xs={{ span: 12 }} sm={{ span: 10, offset: 1 }} md={{ span: 10, offset: 1 }} lg={{ span: 6, offset: 3 }} >\n                                <Card className=\"form-card\" style={{ marginTop: 80 }}>\n                                    <Row>\n                                        <Col className=\"col-img d-none d-lg-block\">\n                                            <Row>\n                                                <Col className=\"logo-form text-center\">\n                                                    <img src={logo} />\n                                                </Col>\n                                            </Row>\n                                            <div className=\"gradient-form\"><img src={graCom} style={{ position: \"absolute\", bottom: 0 }} /></div>\n                                            <img src={vectorCom} style={{ position: \"absolute\", bottom: 30, right: \"40px\" }} />\n                                        </Col>\n                                        <Col>\n                                            <h2 className=\"title-lable my-4 pt-3 text-center\" id=\"card-title\"> LOGIN</h2>\n                                            <Form noValidate validated={validate} onSubmit={this.onSubmit} className=\"form m-4 px-4\">\n                                                <Form.Label className=\"title-lable\">EMAIL</Form.Label>\n                                                <Form.Group controlId=\"formBasicEmail\" >\n                                                    <Form.Control className=\"form form-input\" id=\"form-input\" name=\"email\" type=\"email\" onChange={this.onChange} placeholder=\"Email\" required />\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        Please enter email.\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                                <Form.Label className=\"title-lable\">PASSWORD</Form.Label>\n                                                <Form.Group controlId=\"formBasicPassword\" className=\"\">\n                                                    <Form.Control className=\"form form-input\" id=\"form-input\" name=\"password\" onChange={this.onChange} type=\"password\" placeholder=\"Password\" required />\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        Please enter password.\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                                <Row>\n                                                    <Col className=\"text-right\">\n                                                        <Link to=\"#\" className=\"link-path\">Forgot password?</Link>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col className=\"text-left\">\n                                                        {showAlert ?\n                                                            <div className=\"alert-text\">Email or password is incorrect</div>\n                                                            :\n                                                            \"\"\n                                                        }\n                                                    </Col>\n                                                </Row>\n                                                <Button variant=\"secondary\" block id=\"primary-auth\" className=\"btn-custom mt-3 mb-4\" type=\"submit\" >\n                                                    LOGIN\n                                                </Button>\n                                                <div className=\"divider mt-5\">\n                                                    <span className=\"divider-title\">Don't have an account?</span>\n                                                </div>\n                                                <Link to=\"/Register\" className=\"btn-link\">\n                                                    <Button variant=\"secondary\" block id=\"secondary-auth\" className=\"btn-custom mt-5 mb-6\" >\n                                                        REGISTER\n                                            </Button>\n                                                </Link>\n                                            </Form>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                )\n            }\n            if (currentUser) {\n                return (\n                    <Redirect to=\"/Login\" />\n                )\n            }\n        } else {\n            return (\n                <div>Loading</div>\n            )\n        }\n\n    }\n}\n\nexport default LoginForm",["90","91"],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/Register.js",["92","93","94","95"],"import React from 'react'\nimport firebase from 'firebase'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Form, Button, Container, Row, Col, Card } from 'react-bootstrap'\nimport './Style.css'\nimport logo from \"./Component-logo.svg\"\nimport vectorCom from \"./Component-vec.svg\"\nimport graCom from \"./Component-gra.svg\"\n\nclass Register extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: '',\n            password: '',\n            conPassword: '',\n            showAlert: false,\n            redirect: false,\n            validate: false,\n            message: \"\"\n        }\n    }\n\n    handleRegister = async (e) => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { email, password, conPassword } = this.state\n        if (form.checkValidity() === true) {\n            if (password === conPassword) {\n                const response = await firebase.auth().createUserWithEmailAndPassword(email, password)\n                    .then(response => {\n                        this.setState({\n                            redirect: true\n                        })\n                        const itemsRef = firebase.database().ref('user')\n                        const item = {\n                            email\n                        }\n                        itemsRef.push(item)\n                        this.setState({\n                            email: '',\n                            password: '',\n                        })\n                        this.props.history.push('/')\n                    }).catch(error => {\n                        console.log(error)\n                        this.setState({\n                            showAlert: true,\n                            message: error.message\n                        })\n                    })\n            }else{\n                this.setState({\n                    showAlert: true,\n                    message: \"Password and confirm password incorrect\"\n                })\n            }\n        }else{\n            this.setState({\n                showAlert: true,\n                message: \"Please fill your information completely.\"\n            })\n        }\n        this.setState({\n            validate: true\n        })\n    }\n\n    onChange = e => {\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    render() {\n        const { showAlert, redirect, validate, message } = this.state\n        if (redirect) {\n            return <Redirect to=\"/login\" />\n        }\n        return (\n            <Container fluid className=\"page-center\">\n                <Row className=\"\">\n                    <Col xs={{ span: 12 }} sm={{ span: 10, offset: 1 }} md={{ span: 10, offset: 1 }} lg={{ span: 6, offset: 3 }} >\n                        <Card className=\"form-card\" style={{ marginTop: 80 }}>\n                            <Row>\n                                <Col className=\"col-img d-none d-lg-block\">\n                                    <Row>\n                                        <Col className=\"logo-form text-center\">\n                                            <img src={logo} />\n                                        </Col>\n                                    </Row>\n                                    <div className=\"gradient-form\"><img src={graCom} style={{ position: \"absolute\", bottom: 0 }} /></div>\n                                    <img src={vectorCom} style={{ position: \"absolute\", bottom: 30, right: \"40px\" }} />\n                                </Col>\n                                <Col>\n                                    <h2 className=\"title-lable my-4 pt-3 text-center\" id=\"card-title\">REGISTER</h2>\n                                    <Form noValidate validated={validate} onSubmit={this.handleRegister} className=\"form m-4 px-4\">\n                                        <Form.Label className=\"title-lable\">EMAIL</Form.Label>\n                                        <Form.Group controlId=\"formBasicEmail\" >\n                                            <Form.Control className=\"form form-input\"  name=\"email\" onChange={this.onChange} type=\"email\" placeholder=\"Email\" required />\n                                        </Form.Group>\n                                        <Form.Label className=\"title-lable\">PASSWORD</Form.Label>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Control className=\"form form-input\"  name=\"password\" onChange={this.onChange} type=\"password\" placeholder=\"Password\" required />\n                                        </Form.Group>\n                                        <Form.Label className=\"title-lable\">CONFIRM PASSWORD</Form.Label>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Control className=\"form form-input\"  name=\"conPassword\" onChange={this.onChange} type=\"password\" placeholder=\"Confirm Password\" required />\n                                        </Form.Group>\n                                        <Row className=\"mt-3\">\n                                            <Col className=\"text-left\">\n                                                {showAlert ?\n                                                    <div className=\"alert-text\">{message}</div>\n                                                    :\n                                                    \"\"\n                                                }\n                                            </Col>\n                                        </Row>\n                                        <Button id=\"primary-auth\" block type=\"submit\" className=\"btn-custom my-4\" >\n                                            REGISTER\n                                </Button>\n                                        <p className=\"divider-title mt-4 mb-5 text-center\">Already have an account? <Link to=\"/Login\" className=\"link-path\">Login</Link></p>\n                                    </Form>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\nexport default Register;\n\n",["96","97"],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/MoreDetail.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/ChoosePicture.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/CaptureParticipapnt.js",["98","99"],"import React from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nconst CaptureParticipapnt = (props) => {\n  const webcamRef = React.useRef(null);\n  const [imgSrc] = React.useState([]);\n  const [test, setTest] = React.useState(true);\n  const capture = React.useCallback(async () => {\n    if (imgSrc.length === 2) {\n      props.setFile(imgSrc)\n      setTest(false)\n    }\n    const shot = await webcamRef.current.getScreenshot()\n    let file = dataURLtoFile(shot, \"temp.jpg\"); //แปลง\n    imgSrc.push(file)\n  }, [webcamRef])\n  const renew = () => {\n    imgSrc.splice(0, 5)\n    props.setFile([])\n    setTest(true)\n  }\n\n  const dataURLtoFile = (dataurl, filename) => {\n    var arr = dataurl.split(\",\"),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: \"image/jpeg\" });\n  }\n\n  return (\n    <Row>\n      <Col className=\"text-center mt-3\">\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          width={600}\n          videoConstraints={{\n            width: 1280,\n            height: 720,\n            facingMode: \"user\",\n          }}\n        />\n      </Col>\n      <Col\n        s={12}\n        sm={{ span: 10, offset: 1 }}\n        md={{ span: 8, offset: 2 }}\n        lg={{ span: 8, offset: 2 }}\n        className=\"text-center my-4\"\n      >\n        <Button id=\"primary\" className=\"btn-custom mr-2\" onClick={renew}>\n          Renew\n        </Button>\n        <Button\n          id=\"primary\"\n          className=\"btn-custom mr-2\"\n          onClick={capture}\n          disabled={!test}\n        >\n          Capture\n        </Button>\n        <Button\n          id=\"primary\"\n          type=\"submit\"\n          className=\"btn-custom\"\n          disabled={test}\n        // disabled={imgSrc.length === 1 ? false : true}\n        >\n          Comfirm\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CaptureParticipapnt;\n","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/AllowsPictures.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/firebase/config.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/AddEvent.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/ListofParticipant.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/firebase/index.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/serviceWorker.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/UploadParticipant.js",["100"],"import React, { Component, Fragment } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Form, Container, Row, Col, Card } from 'react-bootstrap'\n\nimport './Style.css'\nimport Nevbar from './Nevbar'\nimport firebase from './firebase'\nimport WebcamCapture from './CaptureParticipapnt'\n\n\nclass UploadParticipant extends Component {\n\n    state = {\n        event_id: this.props.match.params.id,\n        organize_id: '',\n        email: '',\n        currentUser: null,\n        auth: false,\n        validate: false,\n        showAlert: false,\n        participant: {},\n        files: [],\n        headshot_url: [],\n        image: {}\n    }\n\n    async componentWillMount() {\n\n        let user = await this.getUser();\n        let key = await this.getKey(user)\n        this.setState({\n            currentUser: user,\n            organize_id: key,\n            auth: true\n        })\n\n    }\n\n    setFile = (file) => {\n        this.setState({\n            files: file\n        })\n    }\n\n    getKey = (user) => {\n        return new Promise((resolve, reject) => {\n            firebase.database().ref(\"user\").orderByChild(\"email\").equalTo(user.email)\n                .on(\"child_added\", function (snapshot) {\n                    resolve(snapshot.key)\n                })\n        })\n    }\n\n    handleChange = e => {\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = async e => {\n        const { event_id, files, organize_id } = this.state\n        e.preventDefault()\n        const form = e.currentTarget\n        if (form.checkValidity() === true) {\n            let downloadUrlArray = [];\n            for (let i = 0; i < files.length; i++) {\n                let img = files[i];\n                let storageRef = await firebase.storage().ref(`headshot/${img.lastModified}.jpg`)\n                await storageRef.put(img)\n                let downloadUrl = await storageRef.getDownloadURL()\n                downloadUrlArray[i] = downloadUrl\n            }\n            await this.setState({\n                headshot_url: downloadUrlArray\n            })\n            const participantRef = firebase.database().ref(`user/${organize_id}/event/${event_id}/participant`)\n            let item = {\n                email: this.state.email,\n                participant_picture_confirm: false,\n                headshots: this.state.headshot_url\n\n            }\n            participantRef.push(item)\n        } else {\n            this.setState({\n                validate: true\n            })\n            e.stopPropagation()\n        }\n        this.props.history.push(`/MoreDetail/${event_id}`)\n    }\n\n    getUser = () => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().onAuthStateChanged(function (user) {\n                if (user) {\n                    resolve(user)\n                } else {\n                    // No user is signed in.\n                }\n            });\n        })\n    }\n\n\n    render() {\n        const { currentUser, auth, validate } = this.state\n\n        if (auth) {\n            if (currentUser) {\n                return (\n                    <Fragment>\n                        <Nevbar />\n                        <Container fluid>\n                            <Row>\n                                <Col\n                                    xs={12}\n                                    sm={{ span: 10, offset: 1 }}\n                                    md={{ span: 10, offset: 1 }}\n                                    lg={{ span: 10, offset: 1 }}\n                                    style={{ marginTop: 20 }}\n                                >\n                                    <Card className=\"form-card\" className=\"py-4\">\n                                        <h2 className=\"title-lable mt-4 pt-3 text-center\" id=\"card-title\">PARTICIPANT</h2>\n                                        <Form noValidate validated={validate} onSubmit={this.handleSubmit} className=\"form px-4 mx-4\">\n                                            <Row className=\"mt-4\">\n                                                <Col\n                                                    s={12}\n                                                    sm={{ span: 10, offset: 1 }}\n                                                    md={{ span: 8, offset: 2 }}\n                                                    lg={{ span: 6, offset: 3 }}\n                                                >\n                                                    <Form.Label className=\"title-lable\">EMAIL</Form.Label>\n                                                    <Form.Group controlId=\"formBasicEmail\" >\n                                                        <Form.Control className=\"form form-input\" name=\"email\" onChange={this.handleChange} type=\"email\" placeholder=\"Email\" required />\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n                                            <WebcamCapture setFile={this.setFile} />\n                                        </Form>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Fragment>\n                )\n            }\n            if (!currentUser) {\n                return (\n                    <Redirect to=\"/Login\" />\n                )\n            }\n        } else {\n            return (\n                <div>Loading</div>\n            )\n        }\n\n    }\n}\n\nexport default UploadParticipant;","/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/Process.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/App.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/EditEvent.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/ViewPicture.js",[],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/Nevbar.js",["101"],"/Users/haritsuttisaksri/Documents/GitHub/Eventpic-frontend/src/UploadFunction.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":97,"column":53,"nodeType":"108","endLine":97,"endColumn":71},{"ruleId":"106","severity":1,"message":"107","line":100,"column":76,"nodeType":"108","endLine":100,"endColumn":140},{"ruleId":"106","severity":1,"message":"107","line":101,"column":45,"nodeType":"108","endLine":101,"endColumn":128},{"ruleId":"102","replacedBy":"109"},{"ruleId":"104","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":32,"column":23,"nodeType":"113","messageId":"114","endLine":32,"endColumn":31},{"ruleId":"106","severity":1,"message":"107","line":93,"column":45,"nodeType":"108","endLine":93,"endColumn":63},{"ruleId":"106","severity":1,"message":"107","line":96,"column":68,"nodeType":"108","endLine":96,"endColumn":132},{"ruleId":"106","severity":1,"message":"107","line":97,"column":37,"nodeType":"108","endLine":97,"endColumn":120},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":17,"column":6,"nodeType":"119","endLine":17,"endColumn":17,"suggestions":"120"},{"ruleId":"111","severity":1,"message":"121","line":26,"column":7,"nodeType":"113","messageId":"114","endLine":26,"endColumn":11},{"ruleId":"122","severity":1,"message":"123","line":124,"column":65,"nodeType":"124","endLine":124,"endColumn":81},{"ruleId":"106","severity":1,"message":"107","line":77,"column":65,"nodeType":"108","endLine":77,"endColumn":83},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["125"],["126"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar",["125"],["126"],"react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'imgSrc' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside React.useCallback.","ArrayExpression",["127"],"'mime' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [imgSrc, props]",{"range":"130","text":"131"},[558,569],"[imgSrc, props]"]